[build-system]
    build-backend = "poetry.core.masonry.api"
    requires = [
        "poetry-core>=1.9.0",
    ]

[project]
    classifiers = [
        "Development Status :: 5 - Production/Stable",
        "Intended Audience :: Developers",
        "License :: OSI Approved :: MIT License",
        "Operating System :: OS Independent",
        "Programming Language :: Python :: 3 :: Only",
        "Programming Language :: Python :: 3.13",
        "Topic :: Software Development :: Libraries :: Python Modules",
        "Typing :: Typed",
    ]
    dependencies = [
        "colorlog (>=6.9.0)",
        "ldap3 (>=2.9.1)",
        "ldif3 (>=3.2.2)",
        "pydantic (>=2.11.7)",
        "pydantic-settings (>=2.10.1)",
        "structlog (>=25.4.0)",
        "flext-core @ file:///home/marlonsc/flext/flext-core/dist/flext_core-0.9.9-py3-none-any.whl",
    ]
    description = "FLEXT LDIF - Enterprise LDIF Processing Library"
    keywords = [
        "",
        "adapter",
        "enterprise",
        "flext",
        "integration",
        "typed",
    ]
    name = "flext-ldif"
    readme = "README.md"
    requires-python = ">=3.13,<3.14"
    version = "0.9.0"
    [[project.authors]]
        email = "team@flext.sh"
        name  = "FLEXT Team"

    [[project.maintainers]]
        email = "team@flext.sh"
        name  = "FLEXT Team"

    [project.license]
        text = "MIT"

    [project.urls]
        Documentation = "https://github.com/flext-sh/flext/blob/main/README.md"
        Homepage      = "https://github.com/flext-sh/flext"
        Repository    = "https://github.com/flext-sh/flext"

[tool.ruff]
    extend = "../ruff-shared.toml"

    [tool.ruff.lint.per-file-ignores]
        "examples/**/*.py" = [
            "EXE001",  # shebang - examples are meant to be executable
            "T201",    # print - examples demonstrate output
        ]
        "src/flext_ldif/quirks/servers/{ad,apache,ds389,novell,tivoli}_quirks.py" = ["ARG002"]
        "src/flext_ldif/models.py" = [
            "FBT001", # Boolean positional argument - required by Pydantic field serializers
        ]
        "tests/**/*.py" = [
            "S101",    # Allow assert statements in tests
            "SLF001",  # Allow private member access in tests
            "PLR2004", # Allow magic values in tests
            "PT018",   # Allow complex assertions in tests
            "S108",    # Allow /tmp paths in tests
            "INP001",  # Allow implicit namespace packages in tests
            "PLC0415", # Allow local imports in tests
            "ARG001",  # Allow unused function arguments in tests (error handlers)
            "ARG002",  # Allow unused method arguments in tests (fixtures)
            "FBT001",  # Allow boolean positional arguments in parametrized tests
            "PT011",   # Allow broad pytest.raises in tests
        ]

[tool.bandit]
    exclude_dirs = [
        "build",
        "dist",
        "tests",
    ]
    skips = [
        "B101",
        "B601",
    ]

[tool.poetry]
    [[tool.poetry.packages]]
        from    = "src"
        include = "flext_ldif"

[tool.deptry]
    known_first_party = [
        "flext_ldif",
    ]

    [tool.poetry.dependencies]
        ldap3  = ">=2.9.1"
        ldif3  = ">=3.2.2"
        python = ">=3.13,<3.14"

[tool.pytest.ini_options]
    addopts = [
        "--maxfail=1",
        "--strict-config",
        "--strict-markers",
        "--tb=short",
        "-ra",
    ]
    filterwarnings = [
        "ignore::DeprecationWarning:pyasn1(.*|$)",
        "ignore::UserWarning:flext_core.loggings",
    ]
    markers = [
        " tests",
        "benchmark: Benchmark tests",
        "complexity: Complexity tests",
        "concurrency: Concurrency tests",
        "e2e: End-to-end tests",
        "integration: Integration tests",
        "memory: Memory tests",
        "memory_limit: Memory limit tests",
        "performance: Performance tests",
        "race_condition: Race condition tests",
        "regression: Regression tests",
        "slow: Slow tests",
        "smoke: Smoke tests",
        "timeout: Timeout tests",
        "unit: Unit tests",
    ]
    minversion = "8.0"
    testpaths = [
        "tests",
    ]

[tool.coverage.run]
    branch = true
    omit = [
        "*/.venv/*",
        "*/__pycache__/*",
        "*/test_*",
        "*/tests/*",
        "*/venv/*",
    ]
    source = [
        "src",
    ]

[tool.coverage.report]
    exclude_lines = [
        "@(abc\\.)?abstractmethod",
        "class .*\\bProtocol\\):",
        "def __repr__",
        "if 0:",
        "if __name__ == .__main__.:",
        "if self.debug:",
        "if settings.DEBUG",
        "pragma: no cover",
        "raise AssertionError",
        "raise NotImplementedError",
    ]

[tool.coverage.html]
    directory = "reports/coverage"

[tool.coverage.xml]
    output = "reports/coverage.xml"

    [tool.ruff.lint.isort]
        known-first-party = [
            "flext_ldif",
        ]

                        [tool.poetry.dependencies.flext-cli]
            develop = true
            path    = "../flext-cli"

                                                                [tool.poetry.dependencies.flext-ldap]
            develop = true
            path    = "../flext-ldap"

                                                                                                        [tool.poetry.dependencies.flext-observability]
            develop = true
            path    = "../flext-observability"

    [tool.poetry.group.dev.dependencies]
        attrs          = "^25.3.0"
        autoflake      = ">=2.3.1"
        backoff        = "^2.2.1"
        black          = ">=25.1.0"
        codespell      = ">=2.3.0"
        commitizen     = ">=4.8.3"
        detect-secrets = ">=1.5.0"
        isort          = ">=6.0.1"
        pre-commit     = ">=4.0.1"
        pylint         = ">=3.3.0"
        pyrefly        = "^0.34.0"
        pyupgrade      = ">=3.19.0"
        radon          = ">=6.0.1"
        ruff           = ">=0.12.3"
        structlog      = "^25.4.0"
        types-docker   = "^7.1.0.20250916"
        vulture        = ">=2.13"

    [tool.poetry.group.test.dependencies]
        docker              = ">=7.1.0"
        factory-boy         = ">=3.3.1"
        faker               = ">=37.4.0"
        hypothesis          = ">=6.125.0"
        pytest              = ">=8.4.0"
        pytest-benchmark    = ">=5.1.0"
        pytest-clarity      = ">=1.0.1"
        pytest-cov          = ">=6.2.0"
        pytest-deadfixtures = ">=2.2.1"
        pytest-env          = ">=1.1.5"
        pytest-mock         = ">=3.14.0"
        pytest-randomly     = ">=3.16.0"
        pytest-sugar        = ">=1.0.0"
        pytest-timeout      = ">=2.4.0"
        pytest-xdist        = ">=3.8.0"
        python-ldap         = ">=3.4.4"

    [tool.poetry.group.typings.dependencies]
        types-psutil          = ">=7.0.0"
        types-python-dateutil = ">=2.9.0"
        types-pyyaml          = ">=6.0.12"
        types-redis           = ">=4.6.0"
        types-requests        = ">=2.32.4"
        types-setuptools      = ">=80.9.0"
        types-toml            = ">=0.10.8.20240310"

    [tool.poetry.group.security.dependencies]
        bandit    = ">=1.8.0"
        pip-audit = ">=2.7.3"

[tool.pyrefly]
    python-version = "3.13"
    search-path = [
        "../flext-core/src",
        "../flext-cli/src",
        "../flext-ldap/src",
        "../flext-observability/src",
        "examples",
        "src",
        "tests",
    ]
